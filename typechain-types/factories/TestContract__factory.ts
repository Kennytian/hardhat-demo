/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestContract, TestContractInterface } from "../TestContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "setValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161066238038061066283398181016040528101906100329190610171565b61005e60405180606001604052806027815260200161063b602791398261006b60201b61007b1760201c565b8060008190555050610276565b6101098282604051602401610081929190610246565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061010d60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b61014e8161013b565b811461015957600080fd5b50565b60008151905061016b81610145565b92915050565b60006020828403121561018757610186610136565b5b60006101958482850161015c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156101d85780820151818401526020810190506101bd565b838111156101e7576000848401525b50505050565b6000601f19601f8301169050919050565b60006102098261019e565b61021381856101a9565b93506102238185602086016101ba565b61022c816101ed565b840191505092915050565b6102408161013b565b82525050565b6000604082019050818103600083015261026081856101fe565b905061026f6020830184610237565b9392505050565b6103b6806102856000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635524107714610030575b600080fd5b61004a6004803603810190610045919061021a565b61004c565b005b61007160405180606001604052806023815260200161035e6023913960005483610117565b8060008190555050565b61011382826040516024016100919291906102ef565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506101b6565b5050565b6101b183838360405160240161012f9392919061031f565b6040516020818303038152906040527f969cdd03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506101b6565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b6101f7816101e4565b811461020257600080fd5b50565b600081359050610214816101ee565b92915050565b6000602082840312156102305761022f6101df565b5b600061023e84828501610205565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610281578082015181840152602081019050610266565b83811115610290576000848401525b50505050565b6000601f19601f8301169050919050565b60006102b282610247565b6102bc8185610252565b93506102cc818560208601610263565b6102d581610296565b840191505092915050565b6102e9816101e4565b82525050565b6000604082019050818103600083015261030981856102a7565b905061031860208301846102e0565b9392505050565b6000606082019050818103600083015261033981866102a7565b905061034860208301856102e0565b61035560408301846102e0565b94935050505056fe4368616e67696e67206772656574696e672066726f6d202725732720746f2027257327a2646970667358221220256efd33fdfa4c9c8769694044f910f61739d7c1e943d8517d6ddf373a2c0a3664736f6c634300080d00334465706c6f79696e6720612054657374436f6e747261637420776974682073657456616c75653a";

type TestContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestContract__factory extends ContractFactory {
  constructor(...args: TestContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestContract> {
    return super.deploy(_value, overrides || {}) as Promise<TestContract>;
  }
  override getDeployTransaction(
    _value: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_value, overrides || {});
  }
  override attach(address: string): TestContract {
    return super.attach(address) as TestContract;
  }
  override connect(signer: Signer): TestContract__factory {
    return super.connect(signer) as TestContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractInterface {
    return new utils.Interface(_abi) as TestContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContract {
    return new Contract(address, _abi, signerOrProvider) as TestContract;
  }
}
